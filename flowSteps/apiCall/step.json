{
  "label": "API call",
  "name": "apiCall",
  "category": "integrations",
  "description": "This flow step will send generic request",
  "inputs": [
    {
      "label": "Test",
      "name": "test",
      "description": "test field.",
      "type": "urlParams",
      "required": "false",
      "options": {
        "type": "dropDown",
        "possibleValues": {
          "get": [
            {
              "label": "/documents"
            },
            {
              "label": "/documents/{documentId}"
            },
            {
              "label": "/documents/{documentId}/details"
            },
            {
              "label": "/documents/{documentId}/download"
            },
            {
              "label": "/templates"
            },
            {
              "label": "/templates/{templateId}/details"
            }
          ]
        },
        "post": [
          {
            "label": "/documents"
          },
          {
            "label": "/documents/{fileId}"
          },
          {
            "label": "/documents/{documentId}/send"
          },
          {
            "label": "/documents/{documentId}/session"
          }
        ]
      }
    },
    {
      "label": "Headers",
      "name": "headers",
      "description": "The headers have the 'key=value' form, per example: key=ABC123",
      "type": "keyValue"
    },
    {
      "label": "Params",
      "name": "params",
      "description": "The params have the 'key=value' form, per example: key=ABC123",
      "type": "keyValue"
    },
    {
      "label": "Body",
      "name": "body",
      "type": "json",
      "required": "['post', 'put', 'patch'].includes(config.method)",
      "visibility": "['post', 'put', 'patch'].includes(config.method)",
      "description": "This is used to set body request",
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "Requires callback",
      "name": "requiresCallBack",
      "type": "boolean",
      "description": "If true it will return callback",
      "defaultValue": false,
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "Callback data",
      "name": "callbackData",
      "type": "json",
      "description": "This is an object you can send that you will get back when the callback is processed",
      "visibility": "config.requiresCallBack",
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "Callbacks",
      "name": "callbacks",
      "type": "script",
      "description": "This is a map where you can listener for different callbacks",
      "visibility": "config.requiresCallBack",
      "options": {
        "allowContextSelector": "false",
        "parameters": [
          "event",
          "data"
        ]
      }
    },
    {
      "label": "Override Settings",
      "name": "overrideSettings",
      "type": "boolean",
      "description": "If true, allows adding configurations",
      "defaultValue": false,
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "Follow Redirects",
      "name": "followRedirects",
      "type": "boolean",
      "description": "Follow the redirects when a HTTP request is executed",
      "visibility": "config.overrideSettings",
      "defaultValue": false,
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "Download",
      "name": "download",
      "type": "boolean",
      "description": "Indicates that the resource has to be downloaded into a file instead of returning it in the response.",
      "visibility": "config.overrideSettings",
      "defaultValue": false,
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "Download Sync",
      "name": "downloadSync",
      "type": "boolean",
      "description": "If true the method won't return until the file has been downloaded and it will return all the information of the file.",
      "visibility": "config.overrideSettings",
      "defaultValue": false,
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "File Name",
      "name": "fileName",
      "description": "If provided, the file will be stored with this name. If empty the file name will be calculated from the URL.",
      "visibility": "config.overrideSettings",
      "type": "text",
      "options": {
        "allowContextSelector": "true"
      }
    },
    {
      "label": "Full Response",
      "name": "fullResponse",
      "type": "boolean",
      "description": "Include extended information about response",
      "visibility": "config.overrideSettings",
      "defaultValue": false,
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "Connection timeout",
      "name": "connectionTimeout",
      "description": "Connect timeout interval, in milliseconds (0 = infinity). Default value: 5000 ms (5 sec)",
      "visibility": "config.overrideSettings",
      "type": "text",
      "defaultValue": "5000",
      "typeOptions": {
        "validation": {
          "function": "!config.connectionTimeout || utils.isPlaceholder(config.connectionTimeout) || utils.getInteger(config.connectionTimeout) >= 0",
          "message": "The time must be a valid placeholder or a positive integer greater than or equal to 0. "
        }
      },
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "Read timeout",
      "name": "readTimeout",
      "description": "Read timeout interval, in milliseconds (0 = infinity). Default value: 60000 ms (60 sec)",
      "visibility": "config.overrideSettings",
      "type": "text",
      "defaultValue": "60000",
      "typeOptions": {
        "validation": {
          "function": "!config.readTimeout || utils.isPlaceholder(config.readTimeout) || utils.getInteger(config.readTimeout) >= 0",
          "message": "The time must be a valid placeholder or a positive integer greater than or equal to 0. "
        }
      },
      "options": {
        "allowContextSelector": "false"
      }
    }
  ],
  "outputs": [
    {
      "label": "Response",
      "name": "response",
      "type": "object",
      "description": "The response to external URL"
    }
  ]
}